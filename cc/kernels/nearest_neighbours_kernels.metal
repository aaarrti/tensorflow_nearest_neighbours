#include <metal_stdlib>kernel void NearestNeighboursMetalKernel(    // inputs    const device float *token_embeddings [[buffer(0)]],    const device float *embedding_matrix [[buffer(1)]],    // output    device float *outputs [[buffer(2)]],    // attributes    constant int &batch_size [[buffer(3)]],    constant int &sequence_length [[buffer(4)]],    constant int &vocab_size [[buffer(5)]],    constant int &embed_dim [[buffer(6)]],    // thread id    uint2 tid [[thread_position_in_grid]]) {  const int index_in_batch = tid[0];  const int index_in_sequence = tid[1];  float dist = 0;  int argmin = 0;  float new_dist = 0;  for (int word_index = 0; word_index != vocab_size; word_index++) {    for (int i = 0; i != embed_dim; i++) {      const float val1 = embedding_matrix[word_index * vocab_size + i];      const float val2 = token_embeddings[index_in_batch * (sequence_length * embed_dim) +                                          index_in_sequence * sequence_length + i];      new_dist += metal::exp2(val1 - val2);    }    new_dist = metal::sqrt(new_dist);    if (new_dist < dist) {      dist = new_dist;      argmin = word_index;    }  }  for (int i = 0; i != embed_dim; i++) {    outputs[index_in_batch * (sequence_length * embed_dim) + index_in_sequence * sequence_length +            i] = embedding_matrix[argmin * vocab_size + i];  }}